{"version":3,"sources":["hooks/useGoogleSearch.js","views/SearchPage/index.js","components/Search/index.js"],"names":["useGoogleSearch","process","API_KEY","term","useState","data","setData","useEffect","fetchData","a","axios","then","res","url","URL","window","location","href","searchParams","get","SearchPage","useStateValue","className","to","src","alt","Search","hideButtons","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","key","displayLink","pagemap","cse_image","link","title","snippet","_term","input","setInput","dispatch","history","useHistory","search","lucky","push","type","actionTypes","SET_SEARCH_TERM","windowLocation","formattedUrl","onSubmit","e","preventDefault","submit","value","onChange","target","onClick"],"mappings":"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","file":"static/js/5.d1961831.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nconst API_KEY =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? process.env.REACT_APP_API_KEY\r\n    : process.env.API_KEY;\r\n\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData] = useState(term);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios(`https://www.googleapis.com/customsearch/v1?key=AIzaSyCZKLMtht6y0R5lui9ow-FrHU7hwLafTXE&cx=${process.env.REACT_APP_CONTEXT_KEY}&q=${term}\r\n      `).then((res) => setData(res));\r\n    };\r\n\r\n    if (term === null) {\r\n      // Deep linking search component\r\n      const url = new URL(window.location.href);\r\n      term = url.searchParams.get(\"term\");\r\n    }\r\n\r\n    fetchData();\r\n  }, [term]);\r\n\r\n  return {\r\n    data,\r\n  };\r\n};\r\n\r\nexport default useGoogleSearch;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../../providers/StateProvider\";\r\nimport useGoogleSearch from \"../../hooks/useGoogleSearch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"../../components/Search\";\r\nimport \"./index.css\";\r\n\r\nfunction SearchPage() {\r\n\r\n  // Grab val from context api provider.\r\n  const [{ term }] = useStateValue();\r\n  let { data } = useGoogleSearch(term);\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage__header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"\r\n            alt=\"Google logo\"\r\n            className=\"searchPage__logo\"\r\n          />\r\n        </Link>\r\n        <div className=\"searchPage__headerBody\">\r\n          <Search hideButtons />\r\n        </div>\r\n      </div>\r\n\r\n      {data !== null && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.data?.searchInformation?.formattedTotalResults} results (\r\n            {data?.data?.searchInformation.formattedSearchTime} seconds)\r\n          </p>\r\n          {data.data?.items.map((item) => {\r\n            return (\r\n              <div className=\"searchPage__result\" key={item.displayLink}>\r\n                {typeof(item.pagemap?.cse_image?.[0].src) === \"string\" && (\r\n                  <a href={item.link}>\r\n                    <img\r\n                      src={item.pagemap?.cse_image[0]?.src}\r\n                      className=\"searchPage__resultImage\"\r\n                      alt={`${item} thumbnail`}\r\n                    />\r\n                  </a>\r\n                )}\r\n\r\n                <a href={item.link}>{item.displayLink}</a>\r\n                <a href={item.link} className=\"searchPage__resultTitle\">\r\n                  <h2>{item.title}</h2>\r\n                </a>\r\n                <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../providers/StateProvider\";\r\nimport { actionTypes } from \"../../reducers\";\r\nimport axios from \"axios\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  const url = new URL(window.location.href);\r\n  let _term = url.searchParams.get(\"term\");\r\n  const [input, setInput] = useState(() => _term ? _term : \"\");\r\n  const [{}, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const search = async (lucky) => {\r\n\r\n    // If lucky button is pressed\r\n    if (lucky === false) {\r\n      history.push(`/search?term=${input}`);\r\n      dispatch({\r\n        type: actionTypes.SET_SEARCH_TERM,\r\n        term: _term !== null ? _term : input\r\n      });\r\n    } else if (lucky === true) {\r\n      // This is for if the user presses \"I'm feeling lucky\" to redirect them.\r\n      const res = await axios.get(`https://www.googleapis.com/customsearch/v1?key=${process.env.REACT_APP_API_KEY}\r\n      &cx=${process.env.REACT_APP_CONTEXT_KEY}&q=${input}`);\r\n      const windowLocation = res.data.items[0].formattedUrl;\r\n      window.location.href = windowLocation;\r\n    }\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    // This url is used to save term state onreload\r\n    history.push(`/search?term=${input}`);\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\" onSubmit={(e) => submit(e)}>\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"search__inputIcon\" />\r\n        <input value={input} onChange={(e) => setInput(e.target.value)}/>\r\n        <MicIcon />\r\n      </div>\r\n\r\n      {!hideButtons ? (\r\n        <div className=\"search__buttons\">\r\n          <Button onClick={() => search(false)}>Google Search</Button>\r\n          <Button onClick={() => search(true)}>I'm Feeling Lucky test</Button>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"sourceRoot":""}