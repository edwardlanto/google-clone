{"version":3,"sources":["views/Home/index.js","components/Search/index.js"],"names":["Home","className","src","alt","Search","hideButtons","_term","URL","window","location","href","searchParams","get","useState","input","setInput","useStateValue","dispatch","history","useHistory","search","lucky","a","push","type","actionTypes","SET_SEARCH_TERM","term","axios","process","res","windowLocation","data","items","formattedUrl","onSubmit","e","preventDefault","submit","value","onChange","target","onClick"],"mappings":"oHAAA,2CAoBeA,UAhBf,WACE,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,yBACEC,IAAI,qFACJC,IAAI,iBAGR,yBAAKF,UAAU,wBACb,kBAAC,IAAD,U,uLCkDOG,IAtDf,YAA0C,IAAD,IAAvBC,mBAAuB,SAEnCC,EADQ,IAAIC,IAAIC,OAAOC,SAASC,MACpBC,aAAaC,IAAI,QAFM,EAGbC,oBAAS,kBAAMP,GAAgB,MAHlB,mBAGhCQ,EAHgC,KAGzBC,EAHyB,OAIhBC,cAJgB,yCAI5BC,EAJ4B,KAKjCC,EAAUC,cACVC,EAAM,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,0DAGC,IAAVD,EAHS,gBAIXH,EAAQK,KAAR,uBAA6BT,IAC7BG,EAAS,CACPO,KAAMC,IAAYC,gBAClBC,KAAgB,OAAVrB,EAAiBA,EAAQQ,IAPtB,2BASQ,IAAVO,EATE,iCAWOO,IAAMhB,IAAN,yDAA4DiB,0CAA5D,uBACZA,oBADY,cAC2Bf,IAZlC,OAWLgB,EAXK,OAaLC,EAAiBD,EAAIE,KAAKC,MAAM,GAAGC,aACzC1B,OAAOC,SAASC,KAAOqB,EAdZ,4CAAH,sDA4BZ,OACE,0BAAM9B,UAAU,SAASkC,SAAU,SAACC,GAAD,OAXtB,SAACA,GACdA,EAAEC,iBAEFnB,EAAQK,KAAR,uBAA6BT,IAC7BG,EAAS,CACPO,KAAMC,IAAYC,gBAClBC,KAAMb,IAKkCwB,CAAOF,KAC/C,yBAAKnC,UAAU,iBACb,kBAAC,IAAD,CAAYA,UAAU,sBACtB,2BAAOsC,MAAOzB,EAAO0B,SAAU,SAACJ,GAAD,OAAOrB,EAASqB,EAAEK,OAAOF,UACxD,kBAAC,IAAD,OAGAlC,EAMA,8BALA,yBAAKJ,UAAU,mBACb,kBAAC,IAAD,CAAQyC,QAAS,kBAAMtB,GAAO,KAA9B,iBACA,kBAAC,IAAD,CAAQsB,QAAS,kBAAMtB,GAAO,KAA9B,8B","file":"static/js/4.9217cc3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport Search from \"../../components/Search\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\"\r\n          alt=\"Google logo\"\r\n        />\r\n      </div>\r\n      <div className=\"home__inputContainer\">\r\n        <Search />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../providers/StateProvider\";\r\nimport { actionTypes } from \"../../reducers\";\r\nimport axios from \"axios\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  const url = new URL(window.location.href);\r\n  let _term = url.searchParams.get(\"term\");\r\n  const [input, setInput] = useState(() => _term ? _term : \"\");\r\n  const [{}, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const search = async (lucky) => {\r\n\r\n    // If lucky button is pressed\r\n    if (lucky === false) {\r\n      history.push(`/search?term=${input}`);\r\n      dispatch({\r\n        type: actionTypes.SET_SEARCH_TERM,\r\n        term: _term !== null ? _term : input\r\n      });\r\n    } else if (lucky === true) {\r\n      // This is for if the user presses \"I'm feeling lucky\" to redirect them.\r\n      const res = await axios.get(`https://www.googleapis.com/customsearch/v1?key=${process.env.REACT_APP_API_KEY}\r\n      &cx=${process.env.REACT_APP_CONTEXT_KEY}&q=${input}`);\r\n      const windowLocation = res.data.items[0].formattedUrl;\r\n      window.location.href = windowLocation;\r\n    }\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    // This url is used to save term state onreload\r\n    history.push(`/search?term=${input}`);\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\" onSubmit={(e) => submit(e)}>\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"search__inputIcon\" />\r\n        <input value={input} onChange={(e) => setInput(e.target.value)}/>\r\n        <MicIcon />\r\n      </div>\r\n\r\n      {!hideButtons ? (\r\n        <div className=\"search__buttons\">\r\n          <Button onClick={() => search(false)}>Google Search</Button>\r\n          <Button onClick={() => search(true)}>I'm Feeling Lucky test</Button>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"sourceRoot":""}